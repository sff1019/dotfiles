[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
let g:polyglot_disabled = ['latex', 'go']
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

# [[plugins]]
# repo = 'prabirshrestha/async.vim'
#
[[plugins]]
repo = 'roxma/nvim-yarp'
on-if = '''! has('nvim')'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

# airline -----------------------------------------------
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''
  let g:airline_theme = 'nord'
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#formatter = 'default'
  set laststatus=2
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#fnamemod = ':t'
  let g:airline#extensions#tabline#left_sep = '  '
  let g:airline#extensions#tabline#left_alt_sep = ' '
  let g:airline_left_sep = ' '
  let g:airline_right_sep = ' '
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

# fzf ----------------------------------------------------
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0
hook_add = '''
  command! -bang -nargs=* Rg
        \ call fzf#vim#grep(
        \   'rg -g "!node_modules/*" --column --line-number  --no-heading --color=always '.shellescape(<q-args>), 0,
        \   fzf#vim#with_preview({'options': '--exact --delimiter : --nth 3..'}, 'right:50%'))
  nnoremap <silent> <C-t> :FZF<CR>
  nnoremap ,g :Rg<CR>
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'


# git ----------------------------------------------------
[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

# # colorization -------------------------------------------
# [[plugins]]
# repo = 'vim-scripts/AnsiEsc.vim'
#
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add = '''
  " Delete whitespace automatically when current file is saved
  autocmd BufWritePre *  call s:StripTrailingWhitespace()
  fun! s:StripTrailingWhitespace()
    " Only strip if the b:noStripeWhitespace variable isn't set
    if exists('b:noStripWhitespace')
      return
    endif
    :FixWhitespace
  endfun
'''

# [[plugins]]
# repo = 'chrisbra/Colorizer'
# hook_add = '''
#   autocmd BufNewFile,BufRead *.css,*.scss,*.html,*.htm  :ColorHighlight!
# '''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

# easy motion --------------------------------------------
[[plugins]]
repo = 'easymotion/vim-easymotion'

# [[plugins]]
# repo = 'lighttiger2505/deoplete-vim-lsp'
#
# ale ----------------------------------------------
[[plugins]]
repo = 'w0rp/ale'
on_ft = ['javascript', 'go', 'python', 'swift', 'typescript']
hook_add = '''
let g:ale_swift_swiftlint_executable = 'swiftlint'
  let g:ale_swift_swiftlint_options = ''
  let g:syntastic_python_checker_args='--ignore=E501'

  let g:ale_linters = {
        \   'javascript': ['eslint'],
        \   'cpp': ['g++'],
        \   'go': ['gofmt'],
        \   'python': ['flake8'],
        \   'swift': ['swiftlint'],
        \   'typescript': ['tslint'],
        \}
  let g:ale_fixers = {
        \   'javascript': ['eslint'],
        \   'python': ['yapf'],
        \   'go': ['gofmt'],
        \}
  let g:ale_fix_on_save = 1
'''
